<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>lxy.demo</groupId>
	<artifactId>springmvc</artifactId>
	<version>1.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>springmvc</name>
	<description>springmvc</description>
	<properties>
		<jetty.context>/</jetty.context>
		<jetty.http.port>8991</jetty.http.port>
		<jetty.https.port>7443</jetty.https.port>
		<jetty.stopPort>9980</jetty.stopPort>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.targetJDK>1.8</project.build.targetJDK>
		<project.build.time>${maven.build.timestamp}</project.build.time>

		<plugin.checkstyle.version>2.9.1</plugin.checkstyle.version>
		<plugin.pmd.version>2.7.1</plugin.pmd.version>
		<plugin.findbugs.version>2.5.2</plugin.findbugs.version>
		<plugin.jacoco.version>0.6.2.201302030002</plugin.jacoco.version>

		<javax.servlet.version>3.0</javax.servlet.version>
		<junit.version>4.10</junit.version>
		<easymock.version>3.1</easymock.version>
		<json.version>1.2.6</json.version>
		<springversion>4.2.5.RELEASE</springversion>
		<org.slf4j-version>1.7.21</org.slf4j-version>

	</properties>


	<dependencies>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springversion}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springversion}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>


		<!-- 面向切面 -->

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.8.9</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.8.9</version>
		</dependency>
		<!-- 日志依赖 -->

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>


		<!-- 注解 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
		<!-- servlet api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<!--文件上传 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>

	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>**/*.properties</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.15.v20140411</version>
				<configuration>
					<webApp>
						<contextPath>${jetty.context}</contextPath>
					</webApp>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<port>${jetty.http.port}</port>
						</connector>
						<connector implementation="org.eclipse.jetty.server.ssl.SslSocketConnector">
							<port>${jetty.https.port}</port>
							<keystore>build/jetty.keystore.jks</keystore>
							<keyPassword>password</keyPassword>
							<password>password</password>
						</connector>
					</connectors>
					<stopKey>jetty</stopKey>
					<stopPort>${jetty.stopPort}</stopPort>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.5.1</version>
				<configuration>
					<showDeprecation>true</showDeprecation>
					<showWarnings>true</showWarnings>
					<source>${project.build.targetJDK}</source>
					<target>${project.build.targetJDK}</target>
					<testSource>${project.build.targetJDK}</testSource>
					<testTarget>${project.build.targetJDK}</testTarget>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-checkstyle-plugin</artifactId> -->
			<!-- <version>${plugin.checkstyle.version}</version> -->
			<!-- <configuration> -->
			<!-- <configLocation>${project.basedir}/build/check-style.xml</configLocation> -->
			<!-- <includeTestSourceDirectory>true</includeTestSourceDirectory> -->
			<!-- <suppressionsLocation>${project.basedir}/build/check-style-suppression.xml</suppressionsLocation> -->
			<!-- <consoleOutput>true</consoleOutput> -->
			<!-- <failsOnError>true</failsOnError> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>verify</phase> -->
			<!-- <goals> -->
			<!-- <goal>check</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-pmd-plugin</artifactId> -->
			<!-- <version>${plugin.pmd.version}</version> -->
			<!-- <configuration> -->
			<!-- <rulesets> -->
			<!-- <ruleset>build/pmd.xml</ruleset> -->
			<!-- </rulesets> -->
			<!-- <targetJdk>${project.build.targetJDK}</targetJdk> -->
			<!-- <verbose>true</verbose> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>verify</phase> -->
			<!-- <goals> -->
			<!-- <goal>check</goal> -->
			<!-- <goal>cpd-check</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<!-- <plugin> -->
			<!-- <groupId>org.codehaus.mojo</groupId> -->
			<!-- <artifactId>findbugs-maven-plugin</artifactId> -->
			<!-- <version>${plugin.findbugs.version}</version> -->
			<!-- <configuration> -->
			<!-- <excludeFilterFile>build/find-bugs-exclude-filter.xml</excludeFilterFile> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>verify</phase> -->
			<!-- <goals> -->
			<!-- <goal>check</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<!-- <plugin> -->
			<!-- <groupId>org.jacoco</groupId> -->
			<!-- <artifactId>jacoco-maven-plugin</artifactId> -->
			<!-- <version>${plugin.jacoco.version}</version> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <id>prepare-agent</id> -->
			<!-- <goals> -->
			<!-- <goal>prepare-agent</goal> -->
			<!-- </goals> -->
			<!-- </execution> -->
			<!-- <execution> -->
			<!-- <id>check</id> -->
			<!-- <phase>verify</phase> -->
			<!-- <goals> -->
			<!-- <goal>check</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <check> -->
			<!-- <instructionRatio>0</instructionRatio> -->
			<!-- <branchRatio>0</branchRatio> -->
			<!-- <lineRatio>0</lineRatio> -->
			<!-- <complexityRatio>0</complexityRatio> -->
			<!-- <methodRatio>0</methodRatio> -->
			<!-- <classRatio>20</classRatio> -->
			<!-- </check> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->

			<!-- <plugin> -->
			<!-- <groupId>org.apache.maven.plugins</groupId> -->
			<!-- <artifactId>maven-war-plugin</artifactId> -->
			<!-- <version>2.3</version> -->
			<!-- <configuration> -->
			<!-- <useCache>true</useCache> -->
			<!-- </configuration> -->
			<!-- <executions> -->
			<!-- <execution> -->
			<!-- <phase>process-resources</phase> -->
			<!-- <goals> -->
			<!-- <goal>exploded</goal> -->
			<!-- </goals> -->
			<!-- <configuration> -->
			<!-- <webResources> -->
			<!-- <resource> -->
			<!-- <directory>src/main/webapp</directory> -->
			<!-- <includes> -->
			<!-- <include>**/*.css</include> -->
			<!-- <include>**/*.js</include> -->
			<!-- </includes> -->
			<!-- </resource> -->
			<!-- </webResources> -->
			<!-- </configuration> -->
			<!-- </execution> -->
			<!-- </executions> -->
			<!-- </plugin> -->
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<configuration>
					<dependencyLocationsEnabled>false</dependencyLocationsEnabled>
				</configuration>
				<version>2.6</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.12.4</version>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${plugin.jacoco.version}</version>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${plugin.checkstyle.version}</version>
				<configuration>
					<configLocation>build/check-style.xml</configLocation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<suppressionsLocation>${project.basedir}/build/check-style-suppression.xml
					</suppressionsLocation>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>checkstyle</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${plugin.pmd.version}</version>
				<configuration>
					<rulesets>
						<ruleset>build/pmd.xml</ruleset>
					</rulesets>
					<targetJdk>${project.build.targetJDK}</targetJdk>
					<verbose>true</verbose>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${plugin.findbugs.version}</version>
				<configuration>
					<excludeFilterFile>build/find-bugs-exclude-filter.xml</excludeFilterFile>
				</configuration>
			</plugin>


		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>env</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>validate</phase>
								<configuration>
									<target>
										<fail message="env was not set, use -Denv=value">
											<condition>
												<not>
													<isset property="env" />
												</not>
											</condition>
										</fail>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>copy-resources</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${project.build.outputDirectory}</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/conf/${env}/resources</directory>
										</resource>
									</resources>
									<overwrite>true</overwrite>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>